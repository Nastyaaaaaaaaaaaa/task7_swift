// В коде есть цикл сильных ссылок (retain cycle) между объектами Car и Man.

// Car содержит ссылку driver на Man.
// Man содержит ссылку myCar на Car.
// Оба объекта ссылаются друг на друга сильными ссылками, из-за чего они никогда не удаляются из памяти, даже после car = nil и man = nil.


// Используем слабую ссылку (weak) или бесхозную ссылку (unowned).

// weak – если объект может стать nil во время жизни программы.
// unowned – если объект всегда должен существовать после инициализации.


import UIKit

class Car {
    weak var driver: Man?  // Используем weak, так как водитель может исчезнуть
    
    deinit {
        print("машина удалена из памяти")
    }
}

class Man {
    weak var myCar: Car?  // Также используем weak, чтобы избежать цикла
    
    deinit {
        print("мужчина удален из памяти")
    }
}

// Объявляем переменные как опциональные
var car: Car? = Car()
var man: Man? = Man()

// Устанавливаем ссылки
car?.driver = man
man?.myCar = car

// Обнуляем переменные
car = nil
man = nil


// Когда car = nil, переменная driver (weak var) автоматически становится nil.
// Когда man = nil, переменная myCar (weak var) автоматически становится nil.
// Объекты больше не удерживают друг друга, и освобождаются из памяти, вызывая deinit.
